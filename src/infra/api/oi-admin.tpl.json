{
    "openapi": "3.0.3",
    "info": {
        "title": "OI-Admin - OpenAPI 3.0",
        "description": "OI description\n\nSome useful links:\n- [One Identity repository](https://github.com/pagopa/oneidentity)\n- [The source API definition for OI](https://github.com/pagopa/oneidentity/blob/master/src/main/resources/openapi.yaml)",
        "termsOfService": "http://pagopa.it/terms/",
        "contact": {
            "email": "team-oneidentity@pagopa.it"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.1"
    },
    "externalDocs": {
        "description": "Find out more about OI",
        "url": "https://pagopa.it"
    },
    "servers": [
        {
            "url": "${server_url}"
        }
    ],
    "x-amazon-apigateway-binary-media-types": [
        "*/*"
    ],
    "paths": {
        "/client-manager/user-attributes": {
            "put": {
                "tags": [
                    "Admin Client Manager APIs"
                ],
                "description": "This endpoint expose backend function for Client Onboarding Portal.",
                "operationId": "Put_admin_client_manager_user_attributes",
                "x-amazon-apigateway-integration": {
                    "credentials": "${lambda_apigateway_proxy_role}",
                    "passthroughBehavior": "when_no_match",
                    "contentHandling": "CONVERT_TO_TEXT",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${client_manager_lambda_arn}/invocations",
                    "responses": {
                        "204": {
                            "statusCode": "204",
                            "responseParameters": {
                                "method.response.header.content-type": "'application/json'"
                            }
                        },
                        "400": {
                            "statusCode": "400",
                            "responseParameters": {}
                        },
                        "401": {
                            "statusCode": "401",
                            "responseParameters": {}
                        },
                        "403": {
                            "statusCode": "403",
                            "responseParameters": {}
                        },
                        "405": {
                            "statusCode": "405",
                            "responseParameters": {}
                        },
                        "429": {
                            "statusCode": "405",
                            "responseParameters": {}
                        },
                        "500": {
                            "statusCode": "500",
                            "responseParameters": {}
                        }
                    }
                },
                "summary": "Client Onboarding portal backend",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAttributes"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/responseOkNoContentJson"
                    },
                    "400": {
                        "$ref": "#/components/responses/invalidParameters"
                    },
                    "401": {
                        "$ref": "#/components/responses/unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "405": {
                        "$ref": "#/components/responses/methodNotAllowed"
                    },
                    "429": {
                        "$ref": "#/components/responses/rateLimit"
                    },
                    "500": {
                        "$ref": "#/components/responses/serverError"
                    }
                },
                "security": [
                    {
                        "${authorizer}": []
                    }
                ]
            }
        },
        "/client-manager/client-additional/{client_id}": {
            "put": {
                "tags": [
                    "Admin Client Manager APIs"
                ],
                "description": "This endpoint expose backend function for Client Onboarding Portal.",
                "operationId": "Put_admin_client_manager_client_additional",
                "x-amazon-apigateway-integration": {
                    "credentials": "${lambda_apigateway_proxy_role}",
                    "passthroughBehavior": "when_no_match",
                    "contentHandling": "CONVERT_TO_TEXT",
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${client_manager_lambda_arn}/invocations",
                    "responses": {
                        "204": {
                            "statusCode": "204",
                            "responseParameters": {
                                "method.response.header.content-type": "'application/json'"
                            }
                        },
                        "400": {
                            "statusCode": "400",
                            "responseParameters": {}
                        },
                        "401": {
                            "statusCode": "401",
                            "responseParameters": {}
                        },
                        "403": {
                            "statusCode": "403",
                            "responseParameters": {}
                        },
                        "405": {
                            "statusCode": "405",
                            "responseParameters": {}
                        },
                        "429": {
                            "statusCode": "405",
                            "responseParameters": {}
                        },
                        "500": {
                            "statusCode": "500",
                            "responseParameters": {}
                        }
                    }
                },
                "summary": "Client Onboarding portal backend",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientAdditional"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/responseOkNoContentJson"
                    },
                    "400": {
                        "$ref": "#/components/responses/invalidParameters"
                    },
                    "401": {
                        "$ref": "#/components/responses/unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/forbidden"
                    },
                    "405": {
                        "$ref": "#/components/responses/methodNotAllowed"
                    },
                    "429": {
                        "$ref": "#/components/responses/rateLimit"
                    },
                    "500": {
                        "$ref": "#/components/responses/serverError"
                    }
                },
                "security": [
                    {
                        "${authorizer}": []
                    }
                ]
            }
        }
    },
    "components": {
        "responses": {
            "responseOkNoContentJson": {
                "description": "Response Ok, No Content",
                "headers": {
                    "content-type": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "methodNotAllowed": {
                "description": "The HTTP method is not valid",
                "headers": {
                    "Allow": {
                        "description": "This header is required by RFC 2616 and contains a comma separated list of valid HTTP methods.",
                        "schema": {
                            "type": "string",
                            "default": "GET"
                        }
                    },
                    "Pragma": {
                        "description": "Pragma browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-cache"
                        }
                    },
                    "Cache-Control": {
                        "description": "Cache-Control browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-store"
                        }
                    }
                },
                "content-type": {
                    "description": "Content type response.",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "unsupportedMediaType": {
                "description": "The HTTP 415 Unsupported Media Type client error response code indicates that the origin server refuses a particular request because the resource is in a format not supported by the server for HTTP method used.",
                "headers": {
                    "Pragma": {
                        "description": "Pragma browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-cache"
                        }
                    },
                    "Cache-Control": {
                        "description": "Cache-Control browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-store"
                        }
                    }
                }
            },
            "notAcceptable": {
                "description": "The HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
                "headers": {
                    "Pragma": {
                        "description": "Pragma browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-cache"
                        }
                    },
                    "Cache-Control": {
                        "description": "Cache-Control browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-store"
                        }
                    }
                }
            },
            "rateLimit": {
                "description": "Too many requests",
                "headers": {
                    "Pragma": {
                        "description": "Pragma browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-cache"
                        }
                    },
                    "Cache-Control": {
                        "description": "Cache-Control browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-store"
                        }
                    }
                },
                "content-type": {
                    "description": "Content type response.",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "badRequest": {
                "description": "Bad request",
                "headers": {
                    "Pragma": {
                        "description": "Pragma browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-cache"
                        }
                    },
                    "Cache-Control": {
                        "description": "Cache-Control browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-store"
                        }
                    }
                },
                "content-type": {
                    "description": "Content type response.",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "unauthorized": {
                "description": "The client could not be authenticated.",
                "headers": {
                    "Pragma": {
                        "description": "Pragma browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-cache"
                        }
                    },
                    "Cache-Control": {
                        "description": "Cache-Control browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-store"
                        }
                    }
                },
                "content-type": {
                    "description": "Content type response.",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "forbidden": {
                "description": "Forbidden.",
                "headers": {
                    "Pragma": {
                        "description": "Pragma browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-cache"
                        }
                    },
                    "Cache-Control": {
                        "description": "Cache-Control browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-store"
                        }
                    }
                },
                "content-type": {
                    "description": "Content type response.",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "notFound": {
                "description": "Not Found.",
                "headers": {
                    "Pragma": {
                        "description": "Pragma browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-cache"
                        }
                    },
                    "Cache-Control": {
                        "description": "Cache-Control browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-store"
                        }
                    }
                },
                "content-type": {
                    "description": "Content type response.",
                    "schema": {
                        "type": "string"
                    }
                }
            },
            "serverError": {
                "description": "unknown error",
                "headers": {
                    "Pragma": {
                        "description": "Pragma browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-cache"
                        }
                    },
                    "Cache-Control": {
                        "description": "Cache-Control browser directive",
                        "schema": {
                            "type": "string",
                            "default": "no-store"
                        }
                    }
                },
                "content-type": {
                    "description": "Content type response.",
                    "schema": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "openId": {
                "type": "openIdConnect",
                "openIdConnectUrl": "/.well-known/openid-configuration"
            },
            "api_key": {
                "type": "apiKey",
                "name": "x-api-key",
                "in": "header"
            }
        %{
    if
    authorizer
    !="api_key"
            },
            "${ authorizer }": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header",
                "x-amazon-apigateway-authtype": "cognito_user_pools",
                "x-amazon-apigateway-authorizer": {
                    "type": "cognito_user_pools",
                    "providerARNs": [
                        "${ provider_arn }"
                    ]
                }
            }
  %{endif
            }
        },
        "schemas": {
            "UserAttributes": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The user id"
                    },
                    "client_id": {
                        "type": "string",
                        "description": "The client id"
                    }
                }
            },
            "ClientAdditional": {
                "type": "object",
                "properties": {
                    "a11y_uri": {
                        "type": "string",
                        "description": "The accessibility URI"
                    },
                    "back_button_enabled": {
                        "type": "string",
                        "description": "The back button enabled flag"
                    },
                    "localizedContentMap": {
                        "type": "object",
                        "properties": {
                            "en": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme"
                                }
                            },
                            "it": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme"
                                }
                            },
                            "fr": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme"
                                }
                            },
                            "de": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme"
                                }
                            },
                            "sl": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme"
                                }
                            }
                        }
                    }
                }
            },
            "Theme": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The displayed title"
                    },
                    "desc": {
                        "type": "string",
                        "description": "The displayed description"
                    },
                    "doc_uri": {
                        "type": "string",
                        "description": "The doc uri"
                    },
                    "support_address": {
                        "type": "string",
                        "description": "The support address"
                    },
                    "cookie_uri": {
                        "type": "string",
                        "description": "The cookie_uri"
                    }
                }
            }
        }
    }
}