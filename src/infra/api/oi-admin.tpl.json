{
  "openapi": "3.0.3",
  "info": {
    "title": "OI-Admin - OpenAPI 3.0",
    "description": "OI description\n\nSome useful links:\n- [One Identity repository](https://github.com/pagopa/oneidentity)\n- [The source API definition for OI](https://github.com/pagopa/oneidentity/blob/master/src/main/resources/openapi.yaml)",
    "termsOfService": "http://pagopa.it/terms/",
    "contact": {
      "email": "team-oneidentity@pagopa.it"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "externalDocs": {
    "description": "Find out more about OI",
    "url": "https://pagopa.it"
  },
  "servers": [
    {
      "url": "${server_url}"
    }
  ],
  "x-amazon-apigateway-binary-media-types": ["*/*"],
  "paths": {
    "/client-manager/user-attributes": {
      "put": {
        "tags": ["Admin Client Manager APIs"],
        "description": "This endpoint expose backend function for Client Onboarding Portal.",
        "operationId": "Put_admin_client_manager_user_attributes",
        "x-amazon-apigateway-integration": {
          "credentials": "${lambda_apigateway_proxy_role}",
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${client_manager_lambda_arn}/invocations",
          "responses": {
            "204": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.content-type": "'application/json'"
              }
            },
            "400": {
              "statusCode": "400",
              "responseParameters": {}
            },
            "401": {
              "statusCode": "401",
              "responseParameters": {}
            },
            "403": {
              "statusCode": "403",
              "responseParameters": {}
            },
            "405": {
              "statusCode": "405",
              "responseParameters": {}
            },
            "429": {
              "statusCode": "405",
              "responseParameters": {}
            },
            "500": {
              "statusCode": "500",
              "responseParameters": {}
            }
          }
        },
        "summary": "Client Onboarding portal backend",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAttributes"
              }
            }
          },
          "description": "Request body",
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/responseOkNoContentJson"
          },
          "400": {
            "$ref": "#/components/responses/invalidParameters"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "405": {
            "$ref": "#/components/responses/methodNotAllowed"
          },
          "429": {
            "$ref": "#/components/responses/rateLimit"
          },
          "500": {
            "$ref": "#/components/responses/serverError"
          }
        },
        "security": [
          {
            "${authorizer}": []
          }
        ]
      }
    },
    "/client-manager/client-additional/{client_id}": {
      "put": {
        "tags": ["Admin Client Manager APIs"],
        "description": "This endpoint expose backend function for Client Onboarding Portal.",
        "operationId": "Put_admin_client_manager_client_additional",
        "parameters": [
          {
            "in": "path",
            "name": "client_id",
            "description": "client_id that was returned in the client registration response",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "${lambda_apigateway_proxy_role}",
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${client_manager_lambda_arn}/invocations",
          "responses": {
            "204": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.content-type": "'application/json'"
              }
            },
            "400": {
              "statusCode": "400",
              "responseParameters": {}
            },
            "401": {
              "statusCode": "401",
              "responseParameters": {}
            },
            "403": {
              "statusCode": "403",
              "responseParameters": {}
            },
            "405": {
              "statusCode": "405",
              "responseParameters": {}
            },
            "429": {
              "statusCode": "405",
              "responseParameters": {}
            },
            "500": {
              "statusCode": "500",
              "responseParameters": {}
            }
          }
        },
        "summary": "Client Onboarding portal backend",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientAdditional"
              }
            }
          },
          "description": "Request body",
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/responseOkNoContentJson"
          },
          "400": {
            "$ref": "#/components/responses/invalidParameters"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "405": {
            "$ref": "#/components/responses/methodNotAllowed"
          },
          "429": {
            "$ref": "#/components/responses/rateLimit"
          },
          "500": {
            "$ref": "#/components/responses/serverError"
          }
        },
        "security": [
          {
            "${authorizer}": []
          }
        ]
      }
    },
    "/": {
      "post": {
        "tags": ["Admin control panel oidc callback api"],
        "description": "This route will serve the admin control panel oidc callback api",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code_challenge",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code_challenge_method",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "${s3_apigateway_proxy_role}",
          "httpMethod": "POST",
          "uri": "${assets_bucket_control_panel_uri}/index.html",
          "type": "aws",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "requestParameters": {
            "integration.request.querystring.client_id": "method.request.querystring.client_id",
            "integration.request.querystring.response_type": "method.request.querystring.response_type",
            "integration.request.querystring.redirect_uri": "method.request.querystring.redirect_uri",
            "integration.request.querystring.scope": "method.request.querystring.scope",
            "integration.request.querystring.state": "method.request.querystring.state",
            "integration.request.querystring.code_challenge": "method.request.querystring.code_challenge",
            "integration.request.querystring.code_challenge_method": "method.request.querystring.code_challenge_method"
          },
          "responseParameters": {},
          "responses": {
            "200": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.content-type": "integration.response.header.Content-Type"
              }
            },
            "404": {
              "statusCode": "404",
              "responseParameters": {}
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/responseOkHtml"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      },
      "get": {
        "tags": ["Admin control panel home page"],
        "description": "This route will serve the admin control panel home page",
        "parameters": [],
        "x-amazon-apigateway-integration": {
          "credentials": "${s3_apigateway_proxy_role}",
          "httpMethod": "GET",
          "uri": "${assets_bucket_control_panel_uri}/index.html",
          "type": "aws",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "requestParameters": {},
          "responseParameters": {},
          "responses": {
            "200": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.content-type": "integration.response.header.Content-Type"
              }
            },
            "404": {
              "statusCode": "404",
              "responseParameters": {}
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/responseOkHtml"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/dashboard": {
      "get": {
        "tags": ["Admin control panel dashboard page"],
        "description": "This route will serve the admin control panel dashboard page",
        "parameters": [],
        "x-amazon-apigateway-integration": {
          "credentials": "${s3_apigateway_proxy_role}",
          "httpMethod": "GET",
          "uri": "${assets_bucket_control_panel_uri}/index.html",
          "type": "aws",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "requestParameters": {},
          "responseParameters": {},
          "responses": {
            "200": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.content-type": "integration.response.header.Content-Type"
              }
            },
            "404": {
              "statusCode": "404",
              "responseParameters": {}
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/responseOkHtml"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/dashboard/{clientid+}": {
      "get": {
        "tags": ["Admin control panel dashboard client page"],
        "description": "This route will serve the admin control panel dashboard client page",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "${s3_apigateway_proxy_role}",
          "httpMethod": "GET",
          "uri": "${assets_bucket_control_panel_uri}/index.html",
          "type": "aws",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "requestParameters": {},
          "responseParameters": {},
          "responses": {
            "200": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.content-type": "integration.response.header.Content-Type"
              }
            },
            "404": {
              "statusCode": "404",
              "responseParameters": {}
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/responseOkHtml"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/assets/{proxy+}": {
      "get": {
        "parameters": [
          {
            "name": "proxy",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "credentials": "${s3_apigateway_proxy_role}",
          "httpMethod": "GET",
          "uri": "${assets_bucket_control_panel_uri}/assets/{proxy}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Content-Type": "integration.response.header.Content-Type"
              }
            },
            "404": {
              "statusCode": "404",
              "responseParameters": {}
            }
          },
          "requestParameters": {
            "integration.request.path.proxy": "method.request.path.proxy"
          },
          "passthroughBehavior": "when_no_match",
          "cacheKeyParameters": ["method.request.path.proxy"]
        }
      }
    }
  },
  "components": {
    "responses": {
      "responseOkNoContentJson": {
        "description": "Response Ok, No Content",
        "headers": {
          "content-type": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "responseOkHtml": {
        "description": "OK",
        "headers": {
          "location": {
            "description": "Response OK, serving html",
            "schema": {
              "type": "string"
            }
          },
          "content-type": {
            "text/html": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "content": {
          "text/html": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "methodNotAllowed": {
        "description": "The HTTP method is not valid",
        "headers": {
          "Allow": {
            "description": "This header is required by RFC 2616 and contains a comma separated list of valid HTTP methods.",
            "schema": {
              "type": "string",
              "default": "GET"
            }
          },
          "Pragma": {
            "description": "Pragma browser directive",
            "schema": {
              "type": "string",
              "default": "no-cache"
            }
          },
          "Cache-Control": {
            "description": "Cache-Control browser directive",
            "schema": {
              "type": "string",
              "default": "no-store"
            }
          }
        },
        "content-type": {
          "description": "Content type response.",
          "schema": {
            "type": "string"
          }
        }
      },
      "unsupportedMediaType": {
        "description": "The HTTP 415 Unsupported Media Type client error response code indicates that the origin server refuses a particular request because the resource is in a format not supported by the server for HTTP method used.",
        "headers": {
          "Pragma": {
            "description": "Pragma browser directive",
            "schema": {
              "type": "string",
              "default": "no-cache"
            }
          },
          "Cache-Control": {
            "description": "Cache-Control browser directive",
            "schema": {
              "type": "string",
              "default": "no-store"
            }
          }
        }
      },
      "notAcceptable": {
        "description": "The HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
        "headers": {
          "Pragma": {
            "description": "Pragma browser directive",
            "schema": {
              "type": "string",
              "default": "no-cache"
            }
          },
          "Cache-Control": {
            "description": "Cache-Control browser directive",
            "schema": {
              "type": "string",
              "default": "no-store"
            }
          }
        }
      },
      "rateLimit": {
        "description": "Too many requests",
        "headers": {
          "Pragma": {
            "description": "Pragma browser directive",
            "schema": {
              "type": "string",
              "default": "no-cache"
            }
          },
          "Cache-Control": {
            "description": "Cache-Control browser directive",
            "schema": {
              "type": "string",
              "default": "no-store"
            }
          }
        },
        "content-type": {
          "description": "Content type response.",
          "schema": {
            "type": "string"
          }
        }
      },
      "badRequest": {
        "description": "Bad request",
        "headers": {
          "Pragma": {
            "description": "Pragma browser directive",
            "schema": {
              "type": "string",
              "default": "no-cache"
            }
          },
          "Cache-Control": {
            "description": "Cache-Control browser directive",
            "schema": {
              "type": "string",
              "default": "no-store"
            }
          }
        },
        "content-type": {
          "description": "Content type response.",
          "schema": {
            "type": "string"
          }
        }
      },
      "unauthorized": {
        "description": "The client could not be authenticated.",
        "headers": {
          "Pragma": {
            "description": "Pragma browser directive",
            "schema": {
              "type": "string",
              "default": "no-cache"
            }
          },
          "Cache-Control": {
            "description": "Cache-Control browser directive",
            "schema": {
              "type": "string",
              "default": "no-store"
            }
          }
        },
        "content-type": {
          "description": "Content type response.",
          "schema": {
            "type": "string"
          }
        }
      },
      "forbidden": {
        "description": "Forbidden.",
        "headers": {
          "Pragma": {
            "description": "Pragma browser directive",
            "schema": {
              "type": "string",
              "default": "no-cache"
            }
          },
          "Cache-Control": {
            "description": "Cache-Control browser directive",
            "schema": {
              "type": "string",
              "default": "no-store"
            }
          }
        },
        "content-type": {
          "description": "Content type response.",
          "schema": {
            "type": "string"
          }
        }
      },
      "invalidParameters": {
        "description": "Invalid parameters | Invalid redirect_uri | invalid client type | invalid response type | invalid code_challenge/method | Bad request",
        "headers": {
          "Pragma": {
            "description": "Pragma browser directive",
            "schema": {
              "type": "string",
              "default": "no-cache"
            }
          },
          "Cache-Control": {
            "description": "Cache-Control browser directive",
            "schema": {
              "type": "string",
              "default": "no-store"
            }
          },
          "content-type": {
            "description": "Content type response.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "notFound": {
        "description": "Not Found.",
        "headers": {
          "Pragma": {
            "description": "Pragma browser directive",
            "schema": {
              "type": "string",
              "default": "no-cache"
            }
          },
          "Cache-Control": {
            "description": "Cache-Control browser directive",
            "schema": {
              "type": "string",
              "default": "no-store"
            }
          }
        },
        "content-type": {
          "description": "Content type response.",
          "schema": {
            "type": "string"
          }
        }
      },
      "serverError": {
        "description": "unknown error",
        "headers": {
          "Pragma": {
            "description": "Pragma browser directive",
            "schema": {
              "type": "string",
              "default": "no-cache"
            }
          },
          "Cache-Control": {
            "description": "Cache-Control browser directive",
            "schema": {
              "type": "string",
              "default": "no-store"
            }
          }
        },
        "content-type": {
          "description": "Content type response.",
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "schemas": {
      "UserAttributes": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "The user id"
          },
          "client_id": {
            "type": "string",
            "description": "The client id"
          }
        }
      },
      "ClientAdditional": {
        "type": "object",
        "properties": {
          "a11y_uri": {
            "type": "string",
            "description": "The accessibility URI"
          },
          "back_button_enabled": {
            "type": "string",
            "description": "The back button enabled flag"
          },
          "localizedContentMap": {
            "type": "object",
            "properties": {
              "en": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              },
              "it": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              },
              "fr": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              },
              "de": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              },
              "sl": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              }
            }
          }
        }
      },
      "Theme": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The displayed title"
          },
          "desc": {
            "type": "string",
            "description": "The displayed description"
          },
          "doc_uri": {
            "type": "string",
            "description": "The doc uri"
          },
          "support_address": {
            "type": "string",
            "description": "The support address"
          },
          "cookie_uri": {
            "type": "string",
            "description": "The cookie_uri"
          }
        }
      }
    },
    "securitySchemes": {
      "openId": {
        "type": "openIdConnect",
        "openIdConnectUrl": "/.well-known/openid-configuration"
      },
      "api_key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      },
      "${ authorizer }": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "type": "cognito_user_pools",
          "providerARNs": ["${ provider_arn }"]
        }
      }
    }
  }
}
