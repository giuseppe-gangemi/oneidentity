name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@06245a4e0a36c064a573d4150030f5ec548e4fcc # v1.4.10
        with:
          version: yarn run version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag and Release Root Package Only
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: |
          ROOT_VERSION=$(node -p "require('./package.json').version")
          ROOT_TAG="oneidentity@${ROOT_VERSION}"

          if ! git rev-parse "$ROOT_TAG" >/dev/null 2>&1; then
            git tag "$ROOT_TAG"
            git push origin "$ROOT_TAG"
          else
            echo "Tag $ROOT_TAG already exists, skipping tag creation"
          fi

          if ! gh release view "$ROOT_TAG" >/dev/null 2>&1; then
            RELEASE_NOTES="Release of oneidentity monorepo v${ROOT_VERSION}"
            if [ -f "CHANGELOG.md" ]; then
              CHANGELOG_SECTION=$(awk "/## ${ROOT_VERSION}/,/## [0-9]/" CHANGELOG.md | sed '1d;$d')
              if [ -n "$CHANGELOG_SECTION" ]; then
                RELEASE_NOTES="$CHANGELOG_SECTION"
              fi
            fi

            gh release create "$ROOT_TAG" \
              --title "oneidentity v${ROOT_VERSION}" \
              --notes "$RELEASE_NOTES" \
              --latest
          else
            echo "Release for $ROOT_TAG already exists, skipping release creation"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
